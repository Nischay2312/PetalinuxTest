/*
*   game.c
*   This file contains the game logic for the IMU game.
*   Author: Nischay Joshi
*   Date: 2023/05/29
*/

#include "game.h"

void game_init(game_t *game, gpio_t *leds){
    game->ledstate = LED_START_STATE;
    game->currentVariable = 0;
    game->lastVariable = 0;
    game->LED_struct = leds;
    game->dt = IMUSleepus/1000000;
    game->rawVariable = 0;
    game->distance = 0;
    game->velocity = 0;
    game->acceleration = 0;
    game->mass = 0.25;
    //write the start state to the leds
    gpio_set(game->LED_struct, game->ledstate);
}

void game_update(game_t *game, IMUData *imuData){
    //get the current variable
    game->rawVariable = imuData->XAngle;
    game->currentVariable = imuData->XAngle*SpeedFactor + game->lastVariable*(1-SpeedFactor);
    game->lastVariable = game->currentVariable;

    //Compute the force experienced from friction
    float fricforce = game->mass * G_acc * Frict_mu * cos(game->currentVariable * PI / 180);

    float pullingforce = game->mass * G_acc * sin(game->currentVariable * PI / 180);

    //We are introducing friction, so the acceleration is reduced by the friction force but if the pulling force is less than the friction force, the acceleration is 0
    if (pullingforce > fricforce)
    {
        game->acceleration = (pullingforce - fricforce) / game->mass;
    }
    else
    {
        game->acceleration = 0;
    }

    game->velocity += game->acceleration*game->dt;
    game->distance += game->velocity*game->dt;
    
    printf("Angle: %f\n",game->currentVariable);
    printf("Acceleration: %f\n",game->acceleration);
    printf("Velocity: %f\n",game->velocity);
    printf("Distance : %f\n",game->distance);
    printf("Pulling Force: %f\n",pullingforce);
    printf("Friction Force: %f\n",fricforce);
    
}

void game_cleanup(game_t *game){
    //set all variables to 0
    game->ledstate = 0;
    game->currentVariable = 0;
    game->lastVariable = 0;
    game->rawVariable = 0;
    game->dt = 0;
    game->distance = 0;
    game->velocity = 0;
    game->acceleration = 0;
    game->mass = 0;
}
